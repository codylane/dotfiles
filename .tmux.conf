# General options
#-----------------------------------
# Free the original Ctrl-a binding
unbind C-a

# Setting the prefix from C-a to `
set -g prefix `

# Ensure that we can send prefix other apps
bind-key ` send-prefix

# Setting the delay between prefix and command
set -s escape-time 1

# Set the base index for windows and panes to 1 instead of 0
set -g base-index 1
set-window-option -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Set the default terminal mode to xterm
set -g default-terminal   'xterm'

# Reload this config file
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded..."

# Enable vi keys
set -g mode-keys vi


# https://github.com/tmate-io/tmate/issues/108#issuecomment-345860146
if-shell "pstree -p $$ | grep [t]mate" \
  'unbind c; bind c new-window -c "#{pane_current_path}"; \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"; \
  unbind -t vi-copy C-j; '\
  'bind -T copy-mode-vi v send -X begin-selection; \
  bind -T copy-mode-vi V send -X select-line; \
  bind -T copy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection; \
  bind -T copy-mode-vi y send -X copy-pipe-and-cancel pbcopy; \
  bind -T copy-mode-vi Escape send -X cancel; \
  unbind -T copy-mode-vi C-j;'


# 2.3
# bind P paste-buffer
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


# 2.4
# bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send -X copy-pipe "pbcopy"


set-window-option -g xterm-keys on
set-option -g default-terminal screen-256color


# Toggle synced panes on/off
bind s set-window-option synchronize-panes

# Choose session from list
bind S choose-session

# Increase history scrollback
set -g history-limit 10000

# Rather than constraining window size to the maximum size of any client
#   connected to the *session*, constrain window size to the maximum size of any
#   client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

set-window-option -g allow-rename off

# Splitting panes
#-----------------------------------
bind | split-window -h
bind - split-window -v

# Pane movement
#-----------------------------------
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Arrow keys
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Pane resizing
#-----------------------------------
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Mouse support
#-----------------------------------
# This no longe works as of tmux 2.2
# setw -g mode-mouse off
# set-option -g mouse-resize-pane off
# set-option -g mouse-select-pane off
# set-option -g mouse-select-window off

# as of tmux 2.2 here is the new mouse mode support
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

bind -n WheelDownPane select-pane -t= \; send-keys -M

# Activity alerts
#-----------------------------------
set -g monitor-activity  on
set -g visual-activity   on

# Set status line's colors
#-----------------------------------
set-option -g status-style "bg=black"
set-option -g status-style "fg=white"

# Set colors for the active window
#-----------------------------------
setw -g window-status-current-style "bg=blue"
setw -g window-status-current-style "fg=white"

# Pane colors
#-----------------------------------
set -g pane-active-border-bg blue

# Status bar
#-----------------------------------
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S"
set -g status-right '#[fg=red]Up #(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=black]#[fg=yellow]#(cut -d " " -f 1-4 /proc/loadavg) #[fg=cyan,bold]%Y-%m-%d %H:%M:%S#[default]'
set -g status-interval 60

#set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
bind-key C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind-key C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

set -g xterm-keys on
setw -g clock-mode-colour green
setw -g clock-mode-style 24
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
